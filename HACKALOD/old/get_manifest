#!/exlibris/aleph/a20_1/product/bin/perl

use strict;
use CGI qw(:standard :cgi-lib);

use CGI::Carp qw(fatalsToBrowser);
use Net::LDAPS qw(:all);
use Net::LDAP::Util;
use LWP::UserAgent;
use URI::Escape;
use lib '.';
use XMLHash qw/parsexmlstring xml_string text_for_path array_for_path string_for_path/;

my $query = new CGI;
my %args = $query->Vars();
my $ipath = lc $ENV{PATH_INFO};

print header(-type=>"text/html",-charset=>'utf-8',-expires=>'1s');

my $title = $args{'title'};
$title = 'van' unless defined $title;
my $sparql =<<"SPARQL";
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX foafX: <http://xmlns.com/foaf/>

SELECT ?book ?title ?depiction

WHERE {
  ?book rdfs:label ?title;
        a kbo:Boek;
        foafX:depiction ?depiction.

	FILTER regex(?title, "$title", "i")
}
SPARQL
my $datasetname = 'http://lod.kb.nl/edbo/';
my $url = 'http://lod.kb.nl/sparql?default-graph-uri=';
$url .= uri_escape($datasetname); 
$url .= '&query=';
$url .= uri_escape($sparql);
$url .= '&format=' . uri_escape('application/sparql-results+xml');
$url .= '&timeout=180000&debug=on';

my $ua = LWP::UserAgent->new;
$ua->timeout(10);
$ua->env_proxy;

my $response = $ua->get($url);

my $xml = $response->content;
my $data = parsexmlstring($xml);

my $html = '';
my $results = array_for_path($data, 'sparql/results/result');
foreach my $result (@$results) {
  eval {
    my $bookid = text_for_path($result, 'binding[name="book"]/uri');  
    my $title = text_for_path($result, 'binding[name="title"]/literal');  
    my $depiction = text_for_path($result, 'binding[name="depiction"]/uri');  
    $html .= "<TR><TD>$bookid</TD><TD>$title</TD><TD>$depiction</TD></TR>";
  };
  if ($@) {

  }
}
print <<"EOHTML";
<HTML>
  <HEAD>
    <TITLE>title</TITLE>
  </HEAD>
  <BODY>
    <TABLE>
    $html
    </TABLE>
  </BODY>
</HTML>
EOHTML
